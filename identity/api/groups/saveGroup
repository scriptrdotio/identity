var _ = require("/modules/underscore/underscore.js")._;
var paramsEvaluator = require("../../entities/ParamsEvaluator");
var errorHandler = require("../../entities/ErrorHandler");
var groups = require("group");
var errorHandler = new errorHandler.ErrorHandler();

var log = require("log")
log.setLevel("INFO");

var requiredParams = ["name"]; //add new group name on apsdb.update = true
var optionalParams = ["update", "newName", "devices"];

var body = request.body ? request.body : ((request.rawBody) ? request.rawBody : request.parameters);
var requestParams = typeof(body) == "string" ? JSON.parse(body) : body;
//Check if required params
var paramsEvaluator = new paramsEvaluator.ParamsEvaluator();
hasAllRequiredParams = paramsEvaluator.hasRequiredParams(requestParams, requiredParams)
if(!hasAllRequiredParams.success) {
  return errorHandler.buildError("missing_parameter", "Parameter \""+hasAllRequiredParams.param+ "\" is required.");
}

var params = paramsEvaluator.buildParams(requestParams, requiredParams, optionalParams);
var updateDevices = true;
if(params["updateDevices"] != null && params["updateDevices"] != ""){
    updateDevices = params["updateDevices"];
}

var groupName = params["name"];
var groupResponse = null;
if(!params["update"])
    groupResponse = groups.create(groupName);
else {
    if(params["newName"] != null && params["newName"] != ""){
        groupResponse = groups.rename(groupName, params["newName"]);
    	groupName = params["newName"];
    }
}

if(groupResponse != null && groupResponse.metadata.status == "failure") {
    updateDevices = false;
   	var response = groupResponse.metadata;
} else {
   	var response =  {"status": "success"};
}

if(updateDevices){
    var devices = params["devices"];
    if(devices != null && devices != ""){
        var devicesArr = [];
        if(devices instanceof Array){
            devicesArr = devices;
        }else{
            devicesArr = [devices];
        }
        var deviceModule = require("device");
        var ts = apsdb.beginTransaction();
        try{
            devicesArr.forEach(function(deviceId) {
                var saveDeviceParams = {
                    "id": deviceId,
                    "groups": {"append": groupName}
                }
                var deviceResponse = deviceModule.save(saveDeviceParams);
                if(deviceResponse.metadata.status == "failure") {
                   throw {
                        errorCode: deviceResponse.metadata.errorCode,
                        errorDetail: deviceResponse.metadata.errorDetail
                    };
                } else {
                    log.info("Successfully appended group to device ["+ deviceId +"]");
                }
            })
            ts.commit();
        } catch(e){
            ts.rollback();
            log.error("Failure when updating devices' groups\n" + typeof(e) == "string" ? e : JSON.stringify(e));
        }
    }
}

return response;
