var paramsEvaluator = require("../../entities/ParamsEvaluator");
var errorHandler = require("../../entities/ErrorHandler");
var groups = require("group");
var log = require("log")
log.setLevel("INFO");

var errorHandler = new errorHandler.ErrorHandler();

//Check if required params
var requiredParams = ["groupName"];
var body = request.body ? request.body : ((request.rawBody) ? request.rawBody : request.parameters);
var params = typeof(body) == "string" ? JSON.parse(body) : body;
log.info("Request normalized params: " + JSON.stringify(params));
var paramsEvaluator = new paramsEvaluator.ParamsEvaluator();
hasAllRequiredParams = paramsEvaluator.hasRequiredParams(request.body, requiredParams)
if(!hasAllRequiredParams.success) {
  return errorHandler.buildError("missing_parameter", "Parameter \""+hasAllRequiredParams.param+ "\" is required.");
}

var groupIdParam = params["groupName"];
var groupArr = [];
if(groupIdParam instanceof Array){
    groupArr = groupIdParam;
}else{
    groupArr = [groupIdParam];
}

var ts = apsdb.beginTransaction();
try{
    var responseObj = {};
    groupArr.forEach(function(groupName) {
        var response = groups.delete(groupName);
        if(response.metadata.status == "failure") {
            responseObj = response.metadata;
            throw {
                errorCode: response.metadata.errorCode,
                errorDetail: response.metadata.errorDetail
            };
        } else {
          responseObj = {"status": "success"};
        }
    })
    
	ts.commit();
} catch(e){
    ts.rollback();
    log.error("Failure when deleting groups\n" + typeof(e) == "string" ? e : JSON.stringify(e));
}      

return responseObj;

//var response = apsdb.callApi("DeleteGroup", params, null);
