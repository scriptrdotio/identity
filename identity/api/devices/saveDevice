var _ = require("/modules/underscore/underscore.js")._;
var paramsEvaluator = require("../../entities/ParamsEvaluator");
var errorHandler = require("../../entities/ErrorHandler");
var errorHandler = new errorHandler.ErrorHandler();
var devices= require("device");
var log = require("log")
log.setLevel("INFO");

var requiredParams = ["id", "name"];
var optionalParams = ["apsdb.update", "description", "groups", "Password", "confirmPassword", "isSuspended", "device"];

//Check if required params
var paramsEvaluator = new paramsEvaluator.ParamsEvaluator();
hasAllRequiredParams = paramsEvaluator.hasRequiredParams(request.body, requiredParams)
if(!hasAllRequiredParams.success) {
  return errorHandler.buildError("missing_parameter", "Parameter \""+hasAllRequiredParams.param+ "\" is required.");
}

log.info(JSON.stringify(request.body))
var params = paramsEvaluator.buildParams(request.body, requiredParams, optionalParams);

var jsonObj = {};
params['meta.types'] = {};
var deviceAttrs = params.deviceAttrs;
if(deviceAttrs !=null && deviceAttrs.length > 0){
    for(var i=0; i<deviceAttrs.length; i++){
        var name = deviceAttrs[i].name;
        var value = deviceAttrs[i].value;
        var type = deviceAttrs[i].type;
        jsonObj[name]= type;
        params[name] = value;
    }
    params['meta.types'] = jsonObj;
}
delete params['deviceAttrs'];

var response = devices.save(params);
if(response.metadata.status == "failure") {
   return response.metadata;
} else {
      return response.result.device;
}
