var log = require("log");
log.setLevel("INFO");
var moment = require("modules/momentjs/moment.min.js").moment;
var identityManager = require("identity/entities/identityManager");
var defaultStore = require('document').getInstance('DefaultStore');

var body = request.body ? request.body : ((request.rawBody) ? request.rawBody : request.parameters);
var params = typeof(body) == "string" ? JSON.parse(body) : body;
params = typeof(params.params) == "string" ? JSON.parse(params.params) : params.params;

function ConvertToCSV(params) {
    var gridType = params.gridType;
    log.info('start converting document to CSV');
    var str = '';
    if(gridType == "group"){
        var fileName = "groups";
        var object  = identityManager.getGroups({"queryFilter" : params.queryFilter});
        str += "Group Name,Number of Devices\r\n";
        var array = typeof object != 'object' ? JSON.parse(object) : object;
        array = array.documents;
        if(array!= null && array.length >0){
            for (var i = 0; i < array.length; i++) {
                var line = '';
                line += ((array[i].name != undefined && array[i].name!= null) ? array[i].name : "N/A") + ","; 
                line += ((array[i].count != undefined && array[i].count!=null) ? array[i].count : "N/A") + ","; 

                str += line + '\r\n';            
            }
        }
    }
    if(gridType == "device" || gridType == "user"){
        var fileName;
        var object;
        if(gridType == "device"){
            fileName = "devices";
            object  = identityManager.getDevices({"queryFilter" : params.queryFilter});
        }
        else if(gridType == "user"){
            fileName = "users";
            object  = identityManager.getUsers({"queryFilter" : params.queryFilter});
        }
        log.info('getIdentity' + JSON.stringify(object));
        var headerStr = "";
        var array = typeof object != 'object' ? JSON.parse(object) : object;
        if(array!= null && array.length >0){
            var defaultAttrs = ["name", "groups", "creator","email", "workflowState", "tokens","login", "auth_token", "versionNumber", "latest", "lastModifiedBy", "creationDate", "lastModifiedDate", "isSuspended", "description", "id", "meta.types"];
            var deviceAttrsObj = {};
            for (var i = 0; i < array.length; i++) {
                var data = array[i];
                var metaTypes = data["meta.types"];
                Object.keys(data).forEach(function(key) {
                    if(defaultAttrs.indexOf(key) < 0 && deviceAttrsObj[key] == null){
                        deviceAttrsObj[key] = metaTypes[key];
                    }
                });
            }
            for (var i = 0; i < array.length; i++) {
                var data = array[i];
                
                var line = '';
                line += ((array[i].name != undefined && array[i].name!= null) ? array[i].name : "N/A") + ","; 
                line += ((array[i].id != undefined && array[i].id!=null) ? array[i].id : "N/A") + ","; 
                if(gridType == "device"){
                    line += ((array[i].description != undefined && array[i].description!=null) ? "\"" +array[i].description.replace(/"/g,'""')+ "\"" : "N/A") + ","; 
                    line += ((array[i].auth_token != undefined && array[i].auth_token != null) ? array[i].auth_token : "N/A") + ","; 
                    
                } else if(gridType == "user"){
                    line += ((array[i].email != undefined && array[i].email!= null) ? array[i].email : "N/A") + ","; 
                }
                    var devStatus = "Active";
                    if(array[i].isSuspended != undefined && array[i].isSuspended != null && array[i].isSuspended == "true"){
                        devStatus = "Suspended";
                    }
                    line += devStatus + ",";
                line += ((array[i].lastModifiedDate != undefined && array[i].lastModifiedDate!=null) ? moment(array[i].lastModifiedDate).format("DD-MMM-YYYY hh:mm A") : "N/A") + ",";
                
                Object.keys(deviceAttrsObj).forEach(function(key) {
                    line += ((data[key] != undefined && data[key] != null) ? data[key] : "N/A") + ",";
                    if(i == array.length-1)
                        headerStr += "," + key + ":" + deviceAttrsObj[key];
                });
                str += line;
                if(i != array.length-1)
                    str += '\r\n';
            }
            if(gridType == "device")
                str = "name,id,description,token,status,lastModified" + headerStr + "\r\n" + str;
            else if(gridType == "user")
                str = "name,id,email,status,lastModified" + headerStr + "\r\n" + str;

        }
    }
    log.info('end converting document to CSV');
    return {"str": str, "fileName": fileName};
}

var fileCSV = ConvertToCSV(params);
var fileContent = fileCSV.str;
var fileName = fileCSV.fileName;
fileName += '.csv';	
var result = apsdb.createFile(fileContent,fileName);
var timestamp = new Date().getTime();
var docKey = 'Rpt-' + timestamp;
var reportData = {
    "key": docKey,
    "attachments": result.file,
    "report": true
};
var reportResult = defaultStore.save(reportData);
if(reportResult && reportResult.metadata){
    if (reportResult.metadata.status == 'failure') {
        log.error("unable to create report document\n" + JSON.stringify(reportResult));
        throw reportResult;
    } else{
        var key =  reportResult.result.document.key;
        return key;
    }
} else {
    log.error("unable to create report document\n");
    throw reportResult;
}
