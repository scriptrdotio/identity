var paramsEvaluator = require("../entities/ParamsEvaluator");
var errorHandler = require("../entities/ErrorHandler");
var devices = require("device");
var users = require("user");
var errorHandler = new errorHandler.ErrorHandler();
var log = require("log")
log.setLevel("INFO");

var config = require ("../config/properties");
var aclEvaluator = require("../entities/AclEvaluator");
//Check permissions
var identityManagementGroups = config.identityManagementGroups;
//Check if user has rights to access this api
var aclEvaluator = new aclEvaluator.AclEvaluator();
//user needs to be in the identityManagementGroups
var hasPermission = aclEvaluator.hasPermissions(request.user, identityManagementGroups);
if(!hasPermission) {
  return errorHandler.buildError("no_permission", "You do not have enough permissions to manage devices.");
}

var body = request.body ? request.body : ((request.rawBody) ? request.rawBody : request.parameters);
var params = typeof(body) == "string" ? JSON.parse(body) : body;

log.info("############"+JSON.stringify(params))

//Check if required params
var requiredParams = ["id"];
var paramsEvaluator = new paramsEvaluator.ParamsEvaluator();
hasAllRequiredParams = paramsEvaluator.hasRequiredParams(params, requiredParams)
if(!hasAllRequiredParams.success) {
  return errorHandler.buildError("missing_parameter", "Parameter \""+hasAllRequiredParams.param+ "\" is required.");
}
var response;
if(params.module == "device")
 response = devices.get(params["id"], {"includeFieldType" : true})
else if(params.module == "user")
    response = users.get(params["id"], {"includeFieldType" : true})

if(response.metadata.status == "failure") {
    return response.metadata;
} else {
    var result = response.result;
    return response.result;
}

